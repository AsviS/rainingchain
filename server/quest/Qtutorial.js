eval(loadDependency(['List','Actor','Main','Quest','Plan','Itemlist']));

var s = require('./../Quest_exports').init('v1.0','Qtutorial',{
	name:"Tutorial",
	showWindowComplete:false,
	showInTab:false,
	dailyTask:false,
	skillPlotAllowed:true,
	reward:{exp:1,item:1,passive:{min:1,max:1,mod:10}},
});
var q = s.quest; var m = s.map; var b = s.boss;

/* SKETCHY THINGS 
added Db.skillPlot 'Qtutorial-tree-red'
main arrows
give abilities directly
give equip directly
setTimeout for passive arrow.
draw arrow at hint. search _hint

*/

var GIVEABILITY = function(key,name,pos){
	var act = List.all[key];
	act.abilityList.normal[name] = 1;
	if(pos !== null) Actor.ability.swap(act,name,pos);
	act.flag.abilityList = 1;
}
var GIVEEQUIP = function(key,piece,name){
	var act = List.all[key];
	act.equip.normal.piece[piece] = name;
	if(piece === 'weapon') act.weapon = name;
}
/* STEPS TO COMPLETE QUEST
	destroy barricade
	push block
	activate lever
	talk ringo
	break target
	kill all monsters
	loot chest
	assign heal
	pass lava
	get 2 leaves
	make bow
	kill boss
*/

s.newVariable({
	killBarricade:0,
	tgOn:0,
	talkRingo:0,
	killTarget:0,
	killBoss:0,
	killEnemy:0,
	lootChest:0,
	walkedOverLava:0,
	madeBow:0,
	learnHeal:0,
	assignedHeal:0,
	arrowInv:0,
	arrowEquip:0,
	arrowAbility:0,
	arrowHeal:0,
	collectedLeaf:0,
	bossStarted:0,
});

s.newEvent('_start',function(key){
	GIVEEQUIP(key,'amulet','Qsystem-start-amulet');
	GIVEEQUIP(key,'ring','Qsystem-start-ring');
	GIVEEQUIP(key,'helm','Qsystem-start-helm');
	GIVEEQUIP(key,'body','Qsystem-start-body');
	GIVEEQUIP(key,'weapon','Qsystem-start-weapon');
	
	s.teleport(key,'main','t2','solo',true);
	s.setRespawn(key,'main','t2','solo',true);
	s.event('learnMelee',key);
		
	s.setTimeout(key,'feedback',25*15,function(key){
		s.popup(key,'When stuck in a quest, read the hint below the minimap.');
	});
	
	s.chat(key,'You use your first ability by Left-Clicking.');
});
s.newEvent('_testSignIn',function(key){
	s.event('_signIn',key);
});
s.newEvent('_hint',function(key){
	if(!s.get(key,'killBarricade')) return 'ASDW to move.<br>Left-Click to attack.';
	if(!s.get(key,'tgOn')) return 'Activate the switch to free the man.';
	if(!s.get(key,'talkRingo')) return 'Talk with Ringo.';
	if(!s.get(key,'killTarget')) return 'Destroy the target with your new ability (Right-Click).';
	if(s.get(key,'killEnemy') < 6) return 'Kill all monsters and see what happens.';
	if(!s.get(key,'lootChest')) return 'Loot the chest!';
	if(!s.get(key,'learnHeal')) return 'Read the scrolls you just looted.';
	if(!s.get(key,'arrowHeal')) return 'Assign the ability Healing to a key binding.';
	if(!s.get(key,'walkedOverLava')) return 'Use the Healing Ability ([$4] Key) to heal mid-way traversing the lava north.';
	if(!s.get(key,'collectedLeaf')) return 'Harvest Red Trees to craft bow.';
	if(!s.get(key,'madeBow')) return 'Craft bow by Right-Clicking the Plan you looted.';
	if(!s.get(key,'killBoss')) return 'Kill the Dragon Boss!';		
	return "Congratz! Now make your way out of this map.";
});
s.newEvent('_death',function(key){
	s.chat(key,'You can change your respawn location by interacting with gravestones.');
});
s.newEvent('skipTutorial',function(key){
	GIVEABILITY(key,'Qsystem-start-melee',0);
	GIVEABILITY(key,'Qsystem-start-bullet',1);
	GIVEABILITY(key,'Qsystem-start-freeze',2);
	GIVEABILITY(key,'Qsystem-start-fireball',3);
	GIVEABILITY(key,'Qsystem-start-heal',4);
	GIVEABILITY(key,'Qsystem-start-dodge',5);
		
	List.main[key].hideHUD['tab-skill'] = 0;
	List.main[key].hideHUD['tab-quest'] = 0;
	List.main[key].hideHUD['tab-friend'] = 0;	
	List.main[key].hideHUD['passive'] = 0;
	List.main[key].quest.Qtutorial._complete = 1;	//so able to town tele
});
s.newEvent('_complete',function(key){
	s.teleport.town(key);
	
	s.chat(key,"Completing quests grants passive points. You can use those points to customize and strengthen your character via the Passive Grid.");
	List.main[key].currentTab = 'equip';
	Main.arrow.add(List.main[key],{"x":1062,"y":654,id:'passive',side:'right',time:25*3});
		
	List.main[key].hideHUD['tab-skill'] = 0;
	List.main[key].hideHUD['tab-quest'] = 0;
	List.main[key].hideHUD['tab-friend'] = 0;	
	List.main[key].hideHUD['passive'] = 0;
	
	Itemlist.add(List.main[key].invList,Plan.creation.simple(key));
	
	Actor.setTimeout(List.all[key],'tutorial',25*5,function(key){	//cuz after quest complete
		List.main[key].windowList.passive = 1;
	});	
	
	Actor.setTimeout(List.all[key],'feedback',25*60*2,function(key){
		s.popup(key,'Don\'t forget to leave feedback by cliking the flag icon at the bottom.');
		Main.arrow.add(List.main[key],{"x":681,"y":692,id:'feed1',side:'left',time:25*7});
		Main.arrow.add(List.main[key],{"x":627,"y":636,id:'feed2',side:'down',time:25*7});
	});
	
});
s.newEvent('_signIn',function(key){
	s.teleport(key,'main','t2','solo',true);
});
s.newEvent('killBarricade',function(key){
	s.set(key,'killBarricade',1);
});
s.newEvent('talkRingo',function(key){
	if(s.get(key,'talkRingo')) return s.dialogue(key,'ringo','second');
	
	s.dialogue(key,'ringo','first');
	s.set(key,'talkRingo',1);
	s.event('learnArrow',key);
});
s.newEvent('lootChest',function(key){
	s.addItem(key,'bow');	//check Db_plan.js
	s.addItem(key,'ability');	
	s.set(key,'lootChest',1);
	s.chat(key,'You can see your inventory via the tab at the bottom right.');
	
	List.main[key].currentTab = 'inventory';
	Main.arrow.add(List.main[key],{"x":1140,"y":650,id:'inventory',side:'down',time:25*2});
	
});
s.newEvent('viewChest',function(key){
	if(s.get(key,'lootChest')) return false;
	if(s.get(key,'killEnemy') >= 6) return true;
	return null;	
});
s.newEvent('killEnemy',function(key){
	s.add(key,'killEnemy',1);

});
s.newEvent('learnMelee',function(key){
	GIVEABILITY(key,'Qsystem-start-melee',0);
});
s.newEvent('learnArrow',function(key){
	GIVEABILITY(key,'Qsystem-start-bullet',1);
});
s.newEvent('itemAbility',function(key){
	s.event('learnHeal',key);
	s.chat(key,'You have learned the ability Healing.');
	s.chat(key,'To use it, you will need to assign it to a Key Bind.');
	s.removeItem(key,'ability');
	
	Main.arrow.add(List.main[key],{"x":1110,"y":650,id:'equip',side:'down',time:25*30});
	
	s.set(key,'learnHeal',1);
});
s.newEvent('learnHeal',function(key){
	GIVEABILITY(key,'Qsystem-start-heal',null);
	s.set(key,'assignedHeal',1);
});
s.newEvent('killBoss',function(key){
	s.set(key,'killBoss',1);
	
	s.chat(key,'You just learned 3 new abilities. <br> - Shift-Left Click: Freeze Enemies. <br> - Shift-Right Click: Fire! <br> - Space Bar: Invincibility for short time.');
	Main.arrow.add(List.main[key],{"x":100,"y":87,id:'newability',side:'up',time:25*5});
	
	GIVEABILITY(key,'Qsystem-start-freeze',2);
	GIVEABILITY(key,'Qsystem-start-fireball',3);
	GIVEABILITY(key,'Qsystem-start-dodge',5);
		
	s.popup(key,'You can change Key Bindings via the Pref Tab. (Bottom Right)<br>'
	 + 'Or by <a onclick="Command.send(\'win,open,binding\');">clicking here</a>.',25*12);
});

s.newItem('resource','Red Leaf','leaf.leaf',[	//{
	[function(key){ s.chat(key,'Useful material to craft weapons.');},'Examine','Examine.'],
]); //}
s.newItem('ability','Ability Scroll','plan.equip',[	//{
	['itemAbility','Learn','Learn new ability.'],
]); //}

s.newDialogue('ringo',{image:'villager-male.0',name:'Ringo'},{
	first:{
		text:"Thanks for saving me! I'll reward you by teaching you a new ability. Use Right-Click to use it.",
		option:[
			{text:"No problem."},
		]
	},
	second:{
		text:"You should try shooting an arrow with Right-Click at the red and white target.",
		option:[
			{text:"Okay. I'll go do that."},
		]
	},
});

s.newNpc("barrier",{
	name:"Barrier: Use Left-Click to Break",
	hp:10,
	sprite:s.newNpc.sprite("block-barrier",1.2),
	modAmount:0,
	nevermove:1,
	block:{size:[-2,2,-1,1],value:1},
}); 	

s.newNpc("boss",{
	name:"Dragon Boss",
	sprite:s.newNpc.sprite("dragonKing",1.2),
	mastery_dmg:s.newNpc.mastery(0.2,0.2,0.2,0.2,0.2,0.2),
	maxSpd:0.25,
	moveRange:s.newNpc.moveRange(3.5,3),
	boss:'dragon',
	target_maxAngleChange:10,
	resource_hp_regen:0,
	hp:20000,
	modAmount:false,
	status_knock_resist:1,
});

s.newAbility('fireball','attack',{},{
	type:"bullet",angle:20,amount:1,
	objSprite:s.newAbility.sprite("fireball",1.5),
	hitAnim:s.newAbility.anim("fireHit",0.5),
	dmg:s.newAbility.dmg(50,'fire'),
	spd:20,
});
s.newAbility('fireball-360','attack',{},{
	type:"bullet",angle:20,amount:1,
	objSprite:s.newAbility.sprite("fireball",1),
	hitAnim:s.newAbility.anim("fireHit",0.5),
	dmg:s.newAbility.dmg(200,'fire'),
	spd:40,
});
s.newAbility('fireball-fast','attack',{},{
	type:"bullet",angle:60,amount:2,
	objSprite:s.newAbility.sprite("fireball",1),
	hitAnim:s.newAbility.anim("fireHit",0.5),
	dmg:s.newAbility.dmg(25,'fire'),
	spd:40,
});
s.newAbility('fireball-oob','attack',{},{
	type:"bullet",
	objSprite:s.newAbility.sprite("fireball",1),
	hitAnim:s.newAbility.anim("fireHit",0.5),
	dmg:s.newAbility.dmg(250,'fire'),
	spd:30,
});

s.newBoss('dragon',{
	direction:1,
	rotationAngle:0,
	randomAngle:0,
},function(boss){
	var SPD = 1;
	s.newBoss.phase(boss,'phase0',{
		loop:function(boss){
			var num = b.get(boss,'_framePhase') % 100;
			if(num === 40) 
				b.set(boss,'randomAngle',b.get(boss,'_angle') + Math.randomML()*50);
			if(num === 40 || num === 60 || num === 80)	
				b.ability(boss,'fireball',{angle:b.get(boss,'randomAngle')});
			if(num === 75)
				for(var i = 0; i < 340; i += 5)	
					b.ability(boss,'fireball-360',{angle:b.get(boss,'randomAngle')+i+10});
		},
		transitionTest:function(boss){
			if(b.get(boss,'_framePhase') > 400) return 'phase1'	
		},
	});
	s.newBoss.phase(boss,'phase1',{
		loop:function(boss){
			var toadd = b.get(boss,'direction') * SPD;
			b.add(boss,'rotationAngle',toadd);
			b.ability(boss,'fireball-fast',{angle:b.get(boss,'rotationAngle')});
			if(b.get(boss,'_framePhase') % 50 === 0)
				for(var i = 0; i < 300; i += 5)	b.ability(boss,'fireball-oob',{angle:b.get(boss,'rotationAngle')+i+30});
		},
		transitionTest:function(boss){
			if(b.get(boss,'_framePhase') % 250 === 0) return 'phase0';
		},
		transitionIn:function(boss){
			b.set(boss,'rotationAngle',b.get(boss,'_angle'));
			b.set(boss,'direction',Math.random() > 0.5 ? -1 : 1);
		}
	});
});

s.newMap('main',{
	name:"Tutorial",
	tileset:"v1.2",
	grid
	lvl:0,
},{
	spot:{"t1":{"x":2608,"y":48},"s3":{"x":1920,"y":496},"g3":{"x":1760,"y":512},"b5":[2784,2912,704,704],"q3":{"x":2176,"y":768},"b4":[2208,2208,736,992],"a":[2240,2240,768,992],"b":[1568,1856,800,1056],"b8":[2400,3328,832,1472],"t3":{"x":2160,"y":896},"t4":{"x":2464,"y":960},"b7":[1568,1856,1120,1376],"e5":{"x":2896,"y":1168},"s1":{"x":1248,"y":1264},"q2":{"x":512,"y":1264},"n1":{"x":912,"y":1296},"b2":{"x":512,"y":1344},"b1":[864,928,1408,1408],"h":[1568,1856,1408,1408],"c":[1472,1856,1440,1632],"q4":{"x":1856,"y":1472},"g1":{"x":1536,"y":1504},"b3":[1344,1344,1568,1696],"e1":{"x":608,"y":1968},"e2":{"x":1152,"y":1984},"s2":{"x":2944,"y":2064},"e3":{"x":1936,"y":2192},"b6":[2432,2432,2208,2336],"g2":{"x":832,"y":2400},"q1":{"x":1920,"y":2400},"t2":{"x":656,"y":2576},"e4":{"x":1968,"y":2832}},
	load:function(spot){
		m.spawnSignpost(spot.q3,"You should make a bow with the plan you received from the chest before fighting the boss.");
		m.spawnSignpost(spot.q4,"Only those who have a healing ability should attempt passing through the lava pit.");
		
		m.spawnActor(spot.e1,'barrier',{deathEvent:s.event('killBarricade')});
		
		m.spawnActor(spot.e2,'target',{deathEvent:function(key){ 
			s.set(key,'killTarget',1);
			
			var list = s.getNpcInMap(key,spot.map,'block');
			for(var i in list){
				Actor.remove(List.all[list[i]]);
			}	
			
		}});
		
		m.spawnWaypoint(spot.g1,true);
		m.spawnWaypoint(spot.g2,true);
		m.spawnWaypoint(spot.g3,true);
		
		m.spawnActor(spot.b2,'pushable-rock2x2');
		m.spawnToggle(spot.q2,function(key){ return !s.get(key,'tgOn');},function(key){ s.set(key,'tgOn',1);},null);
		
		m.spawnBlock(spot.b1,function(key){ return !s.get(key,'tgOn');},'spike');
		m.spawnBlock(spot.b3,function(key){ return !s.get(key,'killTarget');},'spike',{
			tag:'block',
		});
		m.spawnBlock(spot.b4,function(key){ return !s.get(key,'madeBow') || s.get(key,'bossStarted');},'spike');
		m.spawnBlock(spot.b5,function(key){ return !s.get(key,'killBoss');},'spike');
		m.spawnBlock(spot.b6,function(key){ return !s.get(key,'lootChest');},'spike');
		
		m.spawnBlock(spot.a,function(key){ return false;},'invisible');
		m.spawnBlock(spot.h,function(key){ return false;},'invisible');
		
		m.spawnActor(spot.n1,'npc',{sprite:'villager-male.0',move:0,angle:90,name:'Ringo',dialogue:s.event('talkRingo')});
		
		m.spawnLoot(spot.q1,s.event('viewChest'),s.event('lootChest'),'chest');
		
		m.spawnTeleport(spot.t3,function(key){
			s.teleport(key,'Qtutorial-main','t4','solo');
		},'zone',{angle:0,viewedIf:function(key){
			return s.get(key,'bossStarted');		
		}});
		
		m.spawnTeleport(spot.t1,s.completeQuest,'zone',270);
		
		m.spawnActorGroup(spot.e3,false,[
			['bee',1,{globalDmg:0.1,globalDef:0.5,modAmount:0,deathEvent:s.event('killEnemy')}],
			['bat',2,{globalDmg:0.1,globalDef:0.5,modAmount:0,deathEvent:s.event('killEnemy')}],
		]);
		
		m.spawnActorGroup(spot.e4,false,[
			['mushroom',1,{globalDmg:0.1,globalDef:0.7,modAmount:0,deathEvent:s.event('killEnemy')}],
			['plant',2,{globalDmg:0.1,globalDef:0.7,modAmount:0,deathEvent:s.event('killEnemy')}],
		]);
		
		m.spawnActor(spot.e5,'boss',{modAmount:0,deathEvent:s.event('killBoss')});
		
		m.spawnSkillPlot(spot.s1,'Qtutorial','Qtutorial-tree-red',0);
		m.spawnSkillPlot(spot.s2,'Qtutorial','Qtutorial-tree-red',1);
		m.spawnSkillPlot(spot.s3,'Qtutorial','Qtutorial-tree-red',2);
	},
	loop:function(spot){
		var list = m.collision(spot.b7,2);
		for(var i in list){
			var dmg = s.get(list[i],'assignedHeal') ? -140 : -300;
			s.changeHp(list[i],dmg);
		}
		
		var list = m.collision(spot.b,15);
		for(var i in list){
			s.set(list[i],'walkedOverLava',1);
			s.changeHp(list[i],500);
		}
		var list = m.collision(spot.c,15);
		for(var i in list) s.rechargeAbility(list[i]);
		
		var list = m.collision(spot.b8,25);
		for(var i in list)	s.set(list[i],'bossStarted',1);
		
		//arrow
		if(!s.interval(25)) return;
		var key = m.getPlayerInMap(spot)[0];
		if(!key) return;
		var main = List.main[key];
		var act = List.all[key];
			
		if(s.get(key,'lootChest') && !s.get(key,'arrowInv') && main.currentTab === 'inventory'){
			s.set(key,'arrowInv',1);
			s.chat(key,'Right-Click to use an item.');
			main.arrowRemove = ['inventory'];
		}
		if(s.get(key,'lootChest') && !s.haveItem(key,'bow')) s.set(key,'madeBow',1);
		
		if(s.get(key,'learnHeal') && !s.get(key,'arrowEquip') && main.currentTab === 'equip'){
			s.set(key,'arrowEquip',1);
			s.chat(key,'Now click on Ability to open the Ability window.');
			Main.arrow.add(List.main[key],{"x":1060,"y":632,id:'ability',side:'right',time:25*30});
			Main.arrow.remove(List.main[key],'equip');
		}
		if(s.get(key,'learnHeal') && !s.get(key,'arrowAbility') && main.windowList.ability){
			s.set(key,'arrowAbility',1);
			s.chat(key,'Now click on the ability Healing and assign it to the [$4] key.');
			Main.arrow.add(List.main[key],{"x":220,"y":160,id:'heal',side:'up',time:25*30});
			Main.arrow.add(List.main[key],{"x":139,"y":250,id:'binding',side:'left',time:25*30});
			Main.arrow.remove(List.main[key],'ability');
		}
		if(s.get(key,'learnHeal') && !s.get(key,'arrowHeal') && (act.ability.normal[2] || act.ability.normal[3] || act.ability.normal[4] || act.ability.normal[5])){
			s.set(key,'arrowHeal',1);
			Main.arrow.remove(List.main[key],'heal');
			Main.arrow.remove(List.main[key],'binding');
		}
		
		if(!s.get(key,'collectedLeaf') && s.haveItem(key,'resource',2)){
			s.set(key,'collectedLeaf',1);
			main.currentTab = 'inventory';
		}
	},
});


s.exports(exports);


















