{
  "name": "astar",
  "version": "0.0.1",
  "description": "A*Star pathfinding for NodeJS game servers.",
  "keywords": [
    "astar",
    "game",
    "games",
    "html5",
    "graph",
    "movement",
    "multiplayer"
  ],
  "author": {
    "name": "Brad Dickason",
    "email": "dickason@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bdickason/javascript-astar"
  },
  "devDependencies": {
    "coffee-script": ">=1.1.1",
    "jasmine-node": ">=1.0.6"
  },
  "main": "index",
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# a*star\n\nA* Pathing implementation for NodeJS in Coffeescript\n\n(Forked from bgrins' awesome Javascript implementation via MIT License)\n\n_Uses a Binary Heap for speeeeeed!_\n\nNote: This is just the server-side code to get a* pathing working in NodeJS. If you want the client-side code, check out bgrins' library here: https://github.com/bgrins/javascript-astar\n\n## Install\n```npm install astar```\n\n## Usage\n**Create the Graph:**\n    \n    Graph = (require 'astar').Graph # This a* implementation uses a graph\n\n    graph = new Graph 10\n\n\n**Search the Graph:**\n    # Starting point\n    x = 0\n    y = 1\n\n    # Ending point\n    end_x = 8\n    end_y = 9\n\n    graph.path x, y, end_x, end_y, (path) ->\n      # Do stuff with the path here or do a callback path to use it elsewhere\n\n\n**Add some walls:**\n    # We want a wall at 5, 6\n    x = 5\n    y = 6\n\n    graph.set 5, 6 ->\n  \n**To run the tests**\n    npm install\n    \n    cake tests#\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/bdickason/javascript-astar/issues"
  },
  "homepage": "https://github.com/bdickason/javascript-astar",
  "_id": "astar@0.0.1",
  "dist": {
    "shasum": "c7591919875558a9ab752cc27dfeb667db032950"
  },
  "_from": "astar@0.0.x",
  "_resolved": "https://registry.npmjs.org/astar/-/astar-0.0.1.tgz"
}
